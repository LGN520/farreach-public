[switchos]
; only used by switchos and ptf
SWITCHOS_SETVALID0=1
SWITCHOS_SETVALID0_ACK=2
SWITCHOS_ADD_CACHE_LOOKUP_SETVALID1=3
SWITCHOS_ADD_CACHE_LOOKUP_SETVALID1_ACK=4
SWITCHOS_GET_EVICTDATA_SETVALID3=5
SWITCHOS_GET_EVICTDATA_SETVALID3_ACK=6
SWITCHOS_REMOVE_CACHE_LOOKUP=7
SWITCHOS_REMOVE_CACHE_LOOKUP_ACK=8
SWITCHOS_ENABLE_SINGLEPATH=9
SWITCHOS_ENABLE_SINGLEPATH_ACK=10
SWITCHOS_SET_SNAPSHOT_FLAG=11
SWITCHOS_SET_SNAPSHOT_FLAG_ACK=12
SWITCHOS_LOAD_SNAPSHOT_DATA=13
SWITCHOS_LOAD_SNAPSHOT_DATA_ACK=14
SWITCHOS_RESET_SNAPSHOT_FLAG_AND_REG=15
SWITCHOS_RESET_SNAPSHOT_FLAG_AND_REG_ACK=16
SWITCHOS_PTF_POPSERVER_END=17
SWITCHOS_PTF_SNAPSHOTSERVER_END=18

; used by switchos/controller/server
[snapshot]
; send to each switchos and server: cleanup existing snapshot states if any
; switchos: disable single path; reset snapshot flag and regs; drop snapshot data and special cases
; server: drop server-side snapshot of current period if any (due to controller failure); allow new server-side snapshot
SNAPSHOT_CLEANUP=1
SNAPSHOT_CLEANUP=2
; send to each switchos: enable single path to prepare for setting snapshot flag
SNAPSHOT_PREPARE=3
SNAPSHOT_PREPARE_ACK=4
; send to each switchos: set snapshot flag to detect special cases
SNAPSHOT_SETFLAG=5
SNAPSHOT_SETFLAG_ACK=6
; send to each switchos and server
; switchos: disable single path and load snapshot data
; server: make server-side snapshot if not yet in current period
SNAPSHOT_START=5
SNAPSHOT_START_ACK=6
; send to each switchos: reset snapshot flag and regs; rollback snapshot data and send to controller
SNAPSHOT_GETDATA=7
SNAPSHOT_GETDATA_ACK=8
; send consistent snapshot data to each server: store snapshot data into disk
SNAPSHOT_SENDDATA=9
SNAPSHOT_SENDDATA_ACK=10
; controller: store snapshot id into disk (used to decide snapshot id when launching controller)
