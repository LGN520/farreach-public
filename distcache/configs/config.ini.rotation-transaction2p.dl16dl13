[global]
;workload_name=workloada
workload_name=synthetic
; workload_mode: 0 - static mode; 1 - dynamic mode
workload_mode=0
; 6*10 seconds
dynamic_periodnum=7
dynamic_periodinterval=10
; dynamicrules/synthetic-hotin.out{1, 2, ..., period_num}
dynamic_ruleprefix=dynamicrules/synthetic-hotin.out
; max # of bytes in each value
max_vallen=128
; data size of each batch when reading files to load workload
load_batch_size=10000
; # of physical clients (update MAT size correspondingly)
client_physical_num=2
; # of physical servers (update MAT size correspondingly)
server_physical_num=2
; total # of client threads
client_total_logical_num=128
; total # of server threads (all server logical idxes must < server_total_logical_num)
; change MAX_SERVER_NUM in tofino/netbufferv4.p4 if necessary
server_total_logical_num=2
; only used by remote_client for server rotation under static workload
server_total_logical_num_for_rotation=128

[client]
; a single port (the first physical client uses the port the receive rotation data from other physical clients)
client_rotationdataserver_port=1025
; [client_sendpktserver_port_start, client_sendpktserver_port_start + client_physical_num - 1]
; NOTE: launch other physical clients first; after they are waiting for can_sendpkt, launch the first physical client (client 0) to tell them that they can send pkt at the same time
client_sendpktserver_port_start=1026
; [client_rulemapserver_port_start, client_rulemapserver_port_start + client_physical_num - 1]
; non-first physical clients wait for commands from the first physical client to switch dynamic rulemap to simulate key popularity change
client_rulemapserver_port_start=1036
; [client_worker_port_start, client_worker_port_start + local client logical num - 1]
client_worker_port_start=8888

[client0]
; client thread num for transaction phase in remote client
client_logical_num=64
; dl11 -> bf1 (dpdk interface)
client_ip=10.0.1.11
client_mac=3c:fd:fe:bb:ca:79
client_fpport=11/0
client_pipeidx=0
client_ip_for_client0=172.16.112.11

[client1]
; client thread num for transaction phase in remote client
client_logical_num=64
; dl15 -> bf1 (dpdk interface)
client_ip=10.0.1.15
client_mac=3c:fd:fe:b5:28:59
client_fpport=15/0
client_pipeidx=0
client_ip_for_client0=172.16.112.15

; common configuration of all physical servers
[server]
; # of loading threads for per-server db (not used in ycsb benchmark)
server_load_factor=5
; [server_worker_port_start, server_worker_port_start + local server logical num - 1]
; reserve 1152 (0x480) ~ 1279 (0x4FF), which & 0xFF80 = 0x480, for logical server simulation per physical server
; NOTE: update p4src/parser accordingly
server_worker_port_start=1152
; [server_evictserver_port_start, server_evictserver_port_start + max global server logical idx]
server_evictserver_port_start=2222
; [server_popserver_port_start, server_popserver_port_start + max global server logical idx]
server_popserver_port_start=3333
; [server_valueupdateserver_port_start, server_valueupdateserver_port_start + max global server logical idx]
; reserve 4224 (0x1080) ~ 4351 (0x10FF), which & 0xFF80 = 0x1080, for server simulation of netcache
server_valueupdateserver_port_start=4224
; a single port
transaction_loadfinishserver_port=8000

[server0]
; # of cores used by server.workers, which must <= server_total_corenum but >= # of server_logical_idxes
; NOTE: if # of server_logical_idxes > server_worker_corenum, we report a warning and bind extra server threads to the limited server_cores circularly
server_worker_corenum=16
server_total_corenum=24
; all global server logical idxes must < max_server_thread_num
; 0:1:2:3:4:5:6:7
; 0:1:2:3:4:5:6:7:8:9:10:11:12:13:14:15
; 0:1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:51:52:53:54:55:56:57:58:59:60:61:62:63
server_logical_idxes=123
; dl13 -> bf1 (dpdk interface)
server_ip=10.0.1.16
server_mac=3c:fd:fe:b5:1f:e1
server_fpport=16/0
server_pipeidx=0
; NOTE: not use the NIC corresponding to dpdk interface of server
server_ip_for_controller=172.16.112.16

[server1]
; # of cores used by server.workers, which must <= server_total_corenum but >= # of server_logical_idxes
; NOTE: if # of server_logical_idxes > server_worker_corenum, we report a warning and bind extra server threads to the limited server_cores circularly
server_worker_corenum=16
server_total_corenum=48
; all global server logical idxes must < max_server_thread_num
; 8:9:10:11:12:13:14:15
; 16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31
; 64:65:66:67:68:69:70:71:72:73:74:75:76:77:78:79:80:81:82:83:84:85:86:87:88:89:90:91:92:93:94:95:96:97:98:99:100:101:102:103:104:105:106:107:108:109:110:111:112:113:114:115:116:117:118:119:120:121:122:123:124:125:126:127
; switch for rotation (all of [0, 127] except 123): 0:1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:51:52:53:54:55:56:57:58:59:60:61:62:63:64:65:66:67:68:69:70:71:72:73:74:75:76:77:78:79:80:81:82:83:84:85:86:87:88:89:90:91:92:93:94:95:96:97:98:99:100:101:102:103:104:105:106:107:108:109:110:111:112:113:114:115:116:117:118:119:120:121:122:124:125:126:127
; client/server for rotation (one of [0, 127] except 123): 0
server_logical_idxes=0
; dl16 -> bf1 (dpdk interface)
server_ip=10.0.1.13
server_mac=3c:fd:fe:bb:c9:c8
server_fpport=13/0
server_pipeidx=0
; NOTE: not use the NIC corresponding to dpdk interface of server
server_ip_for_controller=172.16.112.13

[controller]
controller_ip_for_server=172.16.112.16
controller_ip_for_switchos=172.16.112.16
; [controller_popserver_port_start, controller_popserver_port_start + max serveridx]
controller_popserver_port_start=5555
; a single port
controller_evictserver_port=5002
; unit: ms
controller_snapshot_period=10000
; a single port
controller_warmupfinishserver_port=5010

[switch]
; hash partition range / virtual partition num
; change PARTITION_COUNT in tofino/netbufferv4.p4 accordingly (only for hash partition)
switch_partition_count=32768
; change KV_BUCKET_COUNT in tofino/netbufferv4.p4 accordingly (one stage can hold at most 32700 instead of 32768)
;switch_kv_bucket_num=32700
switch_kv_bucket_num=10000
; max # of pipelines in switch
switch_pipeline_num=2
; max # of bytes supported in switch (8B aligned)
switch_max_vallen=128
switchos_sample_cnt=10
; a single port
switchos_popserver_port=5003
; a single port
switchos_snapshotserver_port=5004
; a single port
switchos_specialcaseserver_port=5005
; a single port
switchos_ptf_popserver_port=5006
; a single port
switchos_ptf_snapshotserver_port=5007
spineswitch_total_logical_num=4
leafswitch_total_logical_num=16

[spineswitch]
switch_logical_idxes=0:1:2:3
; bf2 -> bf1
;switchos_ip=172.16.112.18
;spineswitch_fpport_to_leaf=32/0
; bf3 -> bf1
switchos_ip=172.16.112.19
spineswitch_fpport_to_leaf=32/0

[leafswitch]
switch_logical_idxes=4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19
switchos_ip=172.16.112.17
; bf1 -> bf2
;leafswitch_fpport_to_spine=31/0
;leafswitch_pipeidx=1
; bf1 -> bf3
leafswitch_fpport_to_spine=32/0
leafswitch_pipeidx=1

; NOTE: we place reflector_for_leaf at the corresponding physical machine, which must connect with switch
[reflector_for_leaf]
; bf1 is connected with all four physical machines
reflector_ip_for_switchos=172.16.112.16
; a single port (NOTE: udpate p4src/parser.p4 accordingly)
reflector_dp2cpserver_port=5008
; a single port (NOTE: udpate p4src/parser.p4 accordingly)
reflector_cp2dpserver_port=5009
; NOTE: cp2dp_dstip CANNOT be the same as the ip of NIC in deployed physical machine (i.e., 10.0.1.16)
reflector_cp2dp_dstip=10.0.1.11

; NOTE: we place reflector_for_spine at the corresponding physical machine, which must connect with switch
[reflector_for_spine]
; bf2 is connected with dl16/13 (two physical servers)
;reflector_ip_for_switchos=172.16.112.16
;reflector_ip_for_switch=10.0.2.16
;reflector_mac_for_switch=3c:fd:fe:b5:1f:e0
;reflector_fpport_for_switch=16/0
; bf3 is connected with dl11 (one physical client)
reflector_ip_for_switchos=172.16.112.11
reflector_ip_for_switch=10.0.2.11
reflector_mac_for_switch=3c:fd:fe:bb:ca:78
reflector_fpport_for_switch=5/0
; a single port (NOTE: udpate p4src/parser.p4 accordingly)
reflector_dp2cpserver_port=5018
; a single port (NOTE: udpate p4src/parser.p4 accordingly)
reflector_cp2dpserver_port=5019
; NOTE: cp2dp_dstip CANNOT be the same as the ip of NIC in deployed physical machine (i.e., 10.0.2.11/16)
reflector_cp2dp_dstip=10.0.2.15
